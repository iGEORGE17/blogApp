datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_in        Int?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String    @id @default(cuid())
  sessionToken String?   @unique
  userId       String
  expires      DateTime?
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id       String    @id @default(cuid())
  email    String?   @unique
  name     String?
  password String?
  role     Role      @default(USER)
  posts    Post[]
  profile  Profile?
  image    String?
  accounts Account[]
  sessions Session[]
}

model Profile {
  id     String @id @default(cuid())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Post {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  title      String
  imageUrl   String
  publicId   String
  content    String
  tag        String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  published  Boolean  @default(false)
  featured   Boolean  @default(false)
  views      BigInt   @default(0)
  author     User     @relation(fields: [authorId], references: [id])
  authorId   String
}

model Category {
  id    String @id @default(cuid())
  name  String
  posts Post[]
}

enum Role {
  USER
  ADMIN
}
